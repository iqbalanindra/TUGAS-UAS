# app.py
from flask import Flask, render_template, request, redirect, url_for, session
import os

app = Flask(__name__)
app.secret_key = 'your_super_secret_key_here' # Ganti dengan kunci rahasia yang kuat!

# Dummy database (dalam praktiknya, gunakan SQLite, PostgreSQL, dll.)
users = {
    "admin": "password123"
}
items = [] # Contoh: daftar item sederhana

@app.route('/')
def index():
    if 'username' in session:
        return render_template('index.html', username=session['username'], items=items)
    return redirect(url_for('login'))

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        if username in users and users[username] == password:
            session['username'] = username
            return redirect(url_for('index'))
        else:
            return render_template('login.html', error="Username atau password salah!")
    return render_template('login.html')

@app.route('/logout')
def logout():
    session.pop('username', None)
    return redirect(url_for('login'))

@app.route('/add_item', methods=['GET', 'POST'])
def add_item():
    if 'username' not in session:
        return redirect(url_for('login'))
    if request.method == 'POST':
        item_name = request.form['item_name']
        item_description = request.form['item_description']
        items.append({"name": item_name, "description": item_description})
        return redirect(url_for('index'))
    return render_template('add_item.html')

if __name__ == '__main__':
    # Pastikan direktori templates ada
    if not os.path.exists('templates'):
        os.makedirs('templates')
    # Untuk development, di production gunakan WSGI server (Gunicorn, uWSGI)
    app.run(debug=True, host='0.0.0.0', port=5000)